
- include_tasks: install-repos.yaml

- name: print role
  debug:
    msg: "{{role}}"

- name: check if Kubernetes has already been initialized.
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat
  when: is_master_init is defined and is_master_init=='true'

- name: kubeadm init
  shell: kubeadm init --apiserver-advertise-address={{ IP }} --cri-socket={{ CRI_SOCKET }} --pod-network-cidr={{POD_CIDR}} --ignore-preflight-errors=NumCPU,Mem
  when:  is_master_init is defined and is_master_init=='true' and not kubernetes_init_stat.stat.exists

- name: get the kubeadm join command from the Kubernetes master.
  command: kubeadm token create --print-join-command --ttl=1h
  register: kubernetes_join_command_result
  when: is_master_init is defined and is_master_init=='true'

- name: set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: "{{ kubernetes_join_command_result.stdout }}"
  when: is_master_init is defined and is_master_init=='true' and kubernetes_join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- name: print join commnad
  debug:
    msg: "{{kubernetes_join_command}}"
  when: is_master_init is defined and is_master_init=='true' and is_debug=='true' 


- name: get current nodes
  shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf get no -o custom-columns='NODE_IP:status.addresses[0].address' --no-headers
  register: k8s_nodes
  when: is_master_init is defined and is_master_init=='true'

- name: print current nodes
  debug:
    msg: "{{k8s_nodes}}"
  when: is_master_init is defined and is_master_init=='true'

- name: set the kubeadm join command globally.
  set_fact:
    current_nodes: "{{ k8s_nodes.stdout_lines }}"
  when: is_master_init is defined and is_master_init=='true'
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- include_tasks: worker.yaml
  when: role=='worker'
  